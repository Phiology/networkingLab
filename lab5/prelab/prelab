    -What do the protocols covered in this lab use port numbers for?
		
	They use port numbers to only allow limited access and identify applications who want to communicate using TCP or UDP protocol.
		
    -Provide the syntax of the nttcp command for both the sender and receiver, which executes the following scenario:

        -A TCP server has IP address 10.0.2.6 and a TCP client has IP address 10.0.2.7,. The TCP server is waiting on port number 2222 for a connection request. The client connects to the server and transmits 2000 bytes to the server, which are sent as four write operations of 500 bytes each. 
		
		Sender:	nttcp -ts -2000 -n4 -p2222 -D 10.0.2.6
		Receiver:	nttcp -rs -2000 -n4 -p2222
		
    -Answer the following questions on Path MTU Discovery:
        -How does TCP decide the maximum size of a TCP segment?
		
		PMTU discovery is described in RFC1191. When a connection is established, the two hosts involved exchange their TCP maximum segment size (MSS) values. The smaller of the two MSS values is used for the connection.
		The MSS for a system is usually the MTU at the link layer minus 40 bytes for the IP and TCP headers.
		That is defined as the MTU (Maximum Transmission Unit) on the network segment. Since TCP/IP is routed through many different segment, you get path MTU: the maximum size an IP packet on a specific path. 
		If the packet is LARGER that this value, it will be fragmented by the router. Now, there is a flag that can be set to tell routers "do not fragment packet" and it is mainly used in path MTU discovery (see below).
		Path MTU discovery will tell you what the path MTU is. It is simply done as follow: send ICMP packets with the "do not fragment" flag set and, as long as you receive and answer, increase the packet size. Once you've got a "Must fragment but Do Not Fragment flag set" answer, you know the path MTU.
		
        -How does UDP decide the maximum size of a UDP datagram?
		
		The maximum size of a UDP diagram cannot exceed 65508, according to experimental results.
		
        -What is the ICMP error generated by a router when it needs to fragment a datagram with the DF bit set? Is the MTU of the interface that caused the fragmentation also returned?
		
		ICMP Network Unreachable. No, the MTU of the next is returned.
		
        -Explain why a TCP connection over an Ethernet segment never runs into problems with fragmentation. 
		
		TCP avoids fragmentation in this way: when a TCP connection is established, the sender and receiver negotiates the maximum segment size (MSS), so that no fragmentation occurs at their outgoing interfaces. The smaller value is used for the MSS.
		
    -Assume a TCP sender receives an ACK in which the acknowledgment number is set to 34567 and the window size is set to 2048. Which sequence numbers can the sender transmit? 
	
	34568 to 36615.
	
	-Describe the following heuristics used in TCP and explain why they are used:
        
		-Nagle's algorithm
		
		This algorithm limits the number of small segments that a TCP sender can transmit without waiting for an acknowledgement.
		This is accomplished by having the receiver delay a period of time; if during this delay the receiver has data for the sender, ACKs can be piggybacked to the data, therefore saving transmissions of segments.
		
        -Karn's algorithm 
		
		In Karn's algorithm, when a segment is retransmitted, the current RTO value is doubled, instead of being calculated based on previous RTO measurements.
		They are used to help with inefficiency when there are fewer transmissions than there are characters.
		
    -Answer the following questions about TCP acknowledgments:
	
        -What is a delayed ACK?
		
		Delayed acknowledgements are used to keep the number of segments with a small payload small.
			
        -What is a piggybacked ACK? 
		
		Piggybacked acknowledgements are acknowledgements that "ride" with data, in order to reduce the number of transmissions.
		
    -Describe how the retransmission timeout value is determined in TCP.
	
	TCP calucates RTO from the delay between transmission of a segment and the receipt of the acknowledgement for that segment.
	
    -Answer the following questions on TCP flow control and congestion control.
	
        -Describe the sliding window flow control mechanism used in TCP.
		
		Sliding window flow control prevents the receiver from being overloaded with data. It does this by restricting the amount of data it is willing to receive.
		
        -Describe the concepts of slow start and congestion avoidance in TCP.
		
		TCP congestion has two phases: slow start and congestion avoidance. The sender is in slow start when the congestion window (cnwd) is less than or equal to the slow start threshold (ssthresh).
		When the cnwd is bigger than the ssthresh, the TCP sender is in the congestion avoidance phase. This results in the sender reducing his sending rate.
		
        -Explain the concept of fast retransmit and fast recovery in TCP. 
		
		Fast retransmit works by immediately retransmitting segments that are presumed lost (when three duplicate ACKs are received). It does not wait for the timer to expire. Fast recovery works by dividing the slow-start threshold by half of the value in the congestion window, and setting the congestion window to that value.
		This occurs when the retransmission timer times out or when three duplicate ACKs arrive.
		
